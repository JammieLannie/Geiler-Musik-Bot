language: python

services:
  - docker

before_install:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo add-apt-repository -y ppa:projectatomic/ppa
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce podman slirp4netns
  - pip install pytest python-coveralls docker-compose podman-compose pyyaml==3.13
  - pip install https://github.com/containers/podman-compose/archive/devel.tar.gz -U
  - docker-compose version
  - podman-compose version
  - echo "BOT_TOKEN=$BOT_TOKEN" >> sysenv.env
  - echo "MONGODB_URI=$MONGODB_URI" >> sysenv.env
  - echo "MONGODB_DATABASE_NAME=$MONGODB_DATABASE_NAME" >> sysenv.env
  - echo "SPOTIFY_ID=$SPOTIFY_ID" >> sysenv.env
  - echo "SPOTIFY_SECRET=$SPOTIFY_SECRET" >> sysenv.env
  - echo "TEST_ENVIRONMENT=True" >> sysenv.env
  - echo "PORT=8001" >> sysenv.env
  - echo "MONGO_ENABLED=False" >> sysenv.env
  - touch youtube/.env
  - docker network create web
  - sudo apt-get install libopus0
  - git clone https://github.com/tooxo/distest.git --depth 1 -b test
  - cd distest/
  - pip3 install -r requirements-dev.txt
  - pip3 install .
  - pip3 install pynacl
  - cd ..
  - sudo bash -c "echo [registries.search] > /etc/containers/registries.conf"
  - sudo bash -c 'echo registries = [\"docker.io\"] >> /etc/containers/registries.conf'
script:
  - pytest discord/test.py
  - coveralls
  - docker-compose build
  - docker-compose up -d
  - sleep 20s
  - docker-compose logs
  - bash ./discord/run_tests.sh
  - docker-compose stop
  - docker-compose rm -f
  - podman-compose up -d
  - sleep 20s
  - podman-compose logs discord
  - bash ./discord/run_tests.sh
  - podman-compose stop discord parent node web